#include "../stats/BattleStats.hpp"
#include "Ability.hpp"

#ifndef PHYSICAL_SINGLE_HPP
#define PHYSICAL_SINGLE_HPP

class PhysicalSingle : public Ability
{
public:

  PhysicalSingle(float multiplier)
    : m_Multiplier(multiplier)
  {
  }
  
  bool IsOffensive() const override { return true; };

  // Calculate average offensive damage. Assume 1 DEF.
  int CalculateDamage(const BattleStats bs) const override
  {
    int damage = bs.ATK * bs.ATK * m_Multiplier * bs.m_PhysicalKiller;
    if (bs.m_BattleFlags.count(BattleFlags::DualWield))
      {
	damage *= 2;
      }

    return damage;
  };

private:
  float m_Multiplier;
};

// CutThrough 2.5 * 1.33

static const PhysicalSingle CutThrough(2.5*1.33);
static const PhysicalSingle Aim(1.2);
static const PhysicalSingle PowerShot(1.2);
static const PhysicalSingle BurstShot(1.5);
static const PhysicalSingle HyperFire((2.0+5.0) / 2.0 * 0.8);
static const PhysicalSingle BlazingGlory(1.8 / (1.0-0.3));
static const PhysicalSingle ArmorBreak(1.2);
static const PhysicalSingle Barrage(3.2);
static const PhysicalSingle SeakerBlade(2.7);
static const PhysicalSingle GaleBarrage(4.0);
static const PhysicalSingle CallOfTheVoid(2.1/(1.0-0.25));



static const PhysicalSingle AuraBall(0.0);
static const PhysicalSingle Blind(0.0);

#endif
